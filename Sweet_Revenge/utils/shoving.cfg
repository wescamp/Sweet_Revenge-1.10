

#define REPLACE_MOVETYPE_FLY UNIT_ID
    [store_unit]
	[filter]
	    id={UNIT_ID}
	[/filter]
	variable=orig_unit
	kill=no
    [/store_unit]
    [object]
        silent=yes
        [filter]
            id={UNIT_ID}
        [/filter]
	[effect]
	    apply_to=movement_costs
	    replace="true"
	    [movement_costs]
		shallow_water=1
		reef=1
		swamp_water=1
		flat=1
		sand=1
		forest=1
		hills=1
		mountains=1
		village=1
		castle=1
		cave=1
		frozen=1
		fungus=1
	    [/movement_costs]
	[/effect]
    [/object]
#enddef
#define RESTORE_MOVETYPE UNIT_ID
    [store_unit]
	[filter]
	    id={UNIT_ID}
	[/filter]
	variable=new_unit
	kill=no
    [/store_unit]
    [set_variables]
	mode=replace
        name=new_unit.movement_costs
        to_variable=orig_unit.movement_costs
    [/set_variables]
    [unstore_unit]
	variable=new_unit
	find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE orig_unit,new_unit}
#enddef
#define DIRECTIONAL_SHIFT VARNAME DIRECTION DISTANCE
{VARIABLE loop_count {DISTANCE}}
[while]
  [variable]
    name=loop_count
    greater_than=0
  [/variable]
  [do]
    [store_locations]
      [not]
        terrain=W*,Q*,X*
      [/not]
      [and]
	  [filter_adjacent_location]
	    find_in={VARNAME}
	    adjacent="-"+{DIRECTION}  # reverse growth direction for the adj filter check
	  [/filter_adjacent_location]
	  [or]
	    find_in={VARNAME}
	    [filter_adjacent_location]
	      adjacent={DIRECTION}
	      count=0
	      # map's edge; cannot shift any more
	    [/filter_adjacent_location]
	  [/or]
      [/and]
      variable={VARNAME}
    [/store_locations]
    {VARIABLE_OP loop_count add "-1"}
  [/do]
[/while]
{FOREACH {VARNAME} i}
    [if]
	[variable]
	    name="{VARNAME}[$i].x"
	    equals=0
	[/variable]
	[then]
	    {CLEAR_VARIABLE ({VARNAME}[$i])}
	[/then]
    [/if]
    [if]
	[variable]
	    name="{VARNAME}[$i].y"
	    equals=0
	[/variable]
	[then]
	    {CLEAR_VARIABLE ({VARNAME}[$i])}
	[/then]
    [/if]
{NEXT i}
#enddef

#define DIRECTIONAL_GROWTH VARNAME DIRECTION DISTANCE
{VARIABLE loop_count {DISTANCE}}
[while]
  [variable]
    name=loop_count
    greater_than=0
  [/variable]
  [do]
    [store_locations]
      [not]
        terrain=W*,Q*,X*
      [/not]
      [and]
	  [filter_adjacent_location]
	    find_in={VARNAME}
	    adjacent="-"+{DIRECTION}  # reverse growth adjacent for the adj filter check
	  [/filter_adjacent_location]
	  [or]
	    find_in={VARNAME}
	  [/or]
      [/and]
      variable={VARNAME}
    [/store_locations]
    {VARIABLE_OP loop_count add "-1"}
  [/do]
[/while]
{FOREACH {VARNAME} i}
    [if]
	[variable]
	    name="{VARNAME}[$i].x"
	    equals=0
	[/variable]
	[then]
	    {CLEAR_VARIABLE ({VARNAME}[$i])}
	[/then]
    [/if]
    [if]
	[variable]
	    name="{VARNAME}[$i].y"
	    equals=0
	[/variable]
	[then]
	    {CLEAR_VARIABLE ({VARNAME}[$i])}
	[/then]
    [/if]
{NEXT i}
#enddef

#define SHOVING SHOVER_SUF SHOVED_SUF
    [event]
	name=prestart
	[set_menu_item]
	    id=shove
	    description= _ "Shove"
	    [show_if]
		[have_unit]
		    {SHOVER_SUF}
		    [filter_adjacent]
			{SHOVED_SUF}
		    [/filter_adjacent]
		[/have_unit]
	    [/show_if]
	    [filter_location]
		[filter]
		    {SHOVED_SUF}
		[/filter]
	    [/filter_location]
	    [command]
		[store_unit]
		    [filter]
			x,y=$x1,$y1
		    [/filter]
		    kill=no
		    variable=shoved
		[/store_unit]
		[store_unit]
		    [filter]
			x,y=$x1,$y1
		    [/filter]
		    kill=no
		    variable=orig_shoved
		[/store_unit]
		[store_unit]
		    [filter]
			{SHOVER_SUF}
			[filter_adjacent]
			    x,y=$x1,$y1
			[/filter_adjacent]
		    [/filter]
		    kill=no
		    variable=shover
		[/store_unit]
		[animate_unit]
		    flag=attack
		    [filter]
			id=$shover.id
		    [/filter]
		    [facing]
			[filter]
			    id=$shoved.id
			[/filter]
		    [/facing]
		    [filter_second]
			id=$shoved.id
		    [/filter_second]
		    [primary_attack]
			range=melee
		    [/primary_attack]
		    hits=yes
		[/animate_unit]
		[message]
		    speaker=$shoved.id
		    message= _ "Owch!"
		[/message]
		[store_locations]
		    x,y=$shoved.x,$shoved.y
		    variable=move_to
		[/store_locations]
		[if]
		    [have_unit]
			id=$shover.id
			[filter_adjacent]
			    id=$shoved.id
			    adjacent=s
			[/filter_adjacent]
		    [/have_unit]
		    [then]
			{DIRECTIONAL_SHIFT move_to s 3}
			[if]
			    [have_location]
				find_in=move_to
			    [/have_location]
			    [then]
				{REPLACE_MOVETYPE_FLY ($shoved.id)}
				{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
				{RESTORE_MOVETYPE ($shoved.id)}
			    [/then]
			    [else]
				{DIRECTIONAL_SHIFT move_to s 2}
				[if]
				    [have_location]
					find_in=move_to
				    [/have_location]
				    [then]
					{REPLACE_MOVETYPE_FLY ($shoved.id)}
					{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
					{RESTORE_MOVETYPE ($shoved.id)}
				    [/then]
				    [else]
					{DIRECTIONAL_SHIFT move_to s 1}
					[if]
					    [have_location]
						find_in=move_to
					    [/have_location]
					    [then]
						{REPLACE_MOVETYPE_FLY ($shoved.id)}
						{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
						{RESTORE_MOVETYPE ($shoved.id)}
					    [/then]
					    [else]
						{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
					    [/else]
					[/if]
				    [/else]
				[/if]
			    [/else]
			[/if]
		    [/then]
		    [else]
			[if]
			    [have_unit]
				id=$shover.id
				[filter_adjacent]
				    id=$shoved.id
				    adjacent=ne
				[/filter_adjacent]
			    [/have_unit]
			    [then]
				{DIRECTIONAL_SHIFT move_to ne 3}
				[if]
				    [have_location]
					find_in=move_to
				    [/have_location]
				    [then]
					{REPLACE_MOVETYPE_FLY ($shoved.id)}
					{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
					{RESTORE_MOVETYPE ($shoved.id)}
				    [/then]
				    [else]
					{DIRECTIONAL_SHIFT move_to ne 2}
					[if]
					    [have_location]
						find_in=move_to
					    [/have_location]
					    [then]
						{REPLACE_MOVETYPE_FLY ($shoved.id)}
						{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
						{RESTORE_MOVETYPE ($shoved.id)}
					    [/then]
					    [else]
						{DIRECTIONAL_SHIFT move_to ne 1}
						[if]
						    [have_location]
							find_in=move_to
						    [/have_location]
						    [then]
							{REPLACE_MOVETYPE_FLY ($shoved.id)}
							{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
							{RESTORE_MOVETYPE ($shoved.id)}
						    [/then]
						    [else]
							{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
						    [/else]
						[/if]
					    [/else]
					[/if]
				    [/else]
				[/if]
			    [/then]
			    [else]
				[if]
				    [have_unit]
					id=$shover.id
					[filter_adjacent]
					    id=$shoved.id
					    adjacent=nw
					[/filter_adjacent]
				    [/have_unit]
				    [then]
					{DIRECTIONAL_SHIFT move_to nw 3}
					[if]
					    [have_location]
						find_in=move_to
					    [/have_location]
					    [then]
						{REPLACE_MOVETYPE_FLY ($shoved.id)}
						{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
						{RESTORE_MOVETYPE ($shoved.id)}
					    [/then]
					    [else]
						{DIRECTIONAL_SHIFT move_to nw 2}
						[if]
						    [have_location]
							find_in=move_to
						    [/have_location]
						    [then]
							{REPLACE_MOVETYPE_FLY ($shoved.id)}
							{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
							{RESTORE_MOVETYPE ($shoved.id)}
						    [/then]
						    [else]
							{DIRECTIONAL_SHIFT move_to nw 1}
							[if]
							    [have_location]
								find_in=move_to
							    [/have_location]
							    [then]
								{REPLACE_MOVETYPE_FLY ($shoved.id)}
								{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
								{RESTORE_MOVETYPE ($shoved.id)}
							    [/then]
							    [else]
								{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
							    [/else]
							[/if]
						    [/else]
						[/if]
					    [/else]
					[/if]
				    [/then]
				    [else]
					[if]
					    [have_unit]
						id=$shover.id
						[filter_adjacent]
						    id=$shoved.id
						    adjacent=n
						[/filter_adjacent]
					    [/have_unit]
					    [then]
						{DIRECTIONAL_SHIFT move_to n 3}
						[if]
						    [have_location]
							find_in=move_to
						    [/have_location]
						    [then]
							{REPLACE_MOVETYPE_FLY ($shoved.id)}
							{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
							{RESTORE_MOVETYPE ($shoved.id)}
						    [/then]
						    [else]
							{DIRECTIONAL_SHIFT move_to n 2}
							[if]
							    [have_location]
								find_in=move_to
							    [/have_location]
							    [then]
								{REPLACE_MOVETYPE_FLY ($shoved.id)}
								{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
								{RESTORE_MOVETYPE ($shoved.id)}
							    [/then]
							    [else]
								{DIRECTIONAL_SHIFT move_to n 1}
								[if]
								    [have_location]
									find_in=move_to
								    [/have_location]
								    [then]
									{REPLACE_MOVETYPE_FLY ($shoved.id)}
									{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
									{RESTORE_MOVETYPE ($shoved.id)}
								    [/then]
								    [else]
									{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
								    [/else]
								[/if]
							    [/else]
							[/if]
						    [/else]
						[/if]
					    [/then]
					    [else]
						[if]
						    [have_unit]
							id=$shover.id
							[filter_adjacent]
							    id=$shoved.id
							    adjacent=sw
							[/filter_adjacent]
						    [/have_unit]
						    [then]
							{DIRECTIONAL_SHIFT move_to sw 3}
							[if]
							    [have_location]
								find_in=move_to
							    [/have_location]
							    [then]
								{REPLACE_MOVETYPE_FLY ($shoved.id)}
								{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
								{RESTORE_MOVETYPE ($shoved.id)}
							    [/then]
							    [else]
								{DIRECTIONAL_SHIFT move_to sw 2}
								[if]
								    [have_location]
									find_in=move_to
								    [/have_location]
								    [then]
									{REPLACE_MOVETYPE_FLY ($shoved.id)}
									{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
									{RESTORE_MOVETYPE ($shoved.id)}
								    [/then]
								    [else]
									{DIRECTIONAL_SHIFT move_to sw 1}
									[if]
									    [have_location]
										find_in=move_to
									    [/have_location]
									    [then]
										{REPLACE_MOVETYPE_FLY ($shoved.id)}
										{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
										{RESTORE_MOVETYPE ($shoved.id)}
									    [/then]
									    [else]
										{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
									    [/else]
									[/if]
								    [/else]
								[/if]
							    [/else]
							[/if]
						    [/then]
						    [else]
							[if]
							    [have_unit]
								id=$shover.id
								[filter_adjacent]
								    id=$shoved.id
								    adjacent=se
								[/filter_adjacent]
							    [/have_unit]
							    [then]
								{DIRECTIONAL_SHIFT move_to se 3}
								[if]
								    [have_location]
									find_in=move_to
								    [/have_location]
								    [then]
									{REPLACE_MOVETYPE_FLY ($shoved.id)}
									{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
									{RESTORE_MOVETYPE ($shoved.id)}
								    [/then]
								    [else]
									{DIRECTIONAL_SHIFT move_to se 2}
									[if]
									    [have_location]
										find_in=move_to
									    [/have_location]
									    [then]
										{REPLACE_MOVETYPE_FLY ($shoved.id)}
										{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
										{RESTORE_MOVETYPE ($shoved.id)}
									    [/then]
									    [else]
										{DIRECTIONAL_SHIFT move_to se 1}
										[if]
										    [have_location]
											find_in=move_to
										    [/have_location]
										    [then]
											{REPLACE_MOVETYPE_FLY ($shoved.id)}
											{MOVE_UNIT (id=$shoved.id) $move_to.x $move_to.y}
											{RESTORE_MOVETYPE ($shoved.id)}
										    [/then]
										    [else]
											{NARRATOR_MESSAGE (_"$shoved.name cannot be pushed any farther in this direction.")}
										    [/else]
										[/if]
									    [/else]
									[/if]
								    [/else]
								[/if]
							    [/then]
							[/if]
						    [/else]
						[/if]
					    [/else]
					[/if]
				    [/else]
				[/if]
			    [/else]
			[/if]
		    [/else]
		[/if]
		{CLEAR_VARIABLE shover,shoved,loop_count,orig_shoved}
	    [/command]
	[/set_menu_item]
    [/event]
#enddef